#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include "custom_behaviors.dtsi"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC         &kp F1                      &kp F2             &kp F3                      &kp F4                       &kp F5                                               &kp F6                    &kp F7                    &kp F8                      &kp F9                      &kp F10            &kp F11
&tog 2          &kp N1                      &kp N2             &kp N3                      &kp N4                       &kp N5                                               &kp N6                    &kp N7                    &kp N8                      &kp N9                      &kp N0             &kp MINUS
&kp LCTRL       &kp Q                       &kp W              &kp E                       &kp R                        &kp T                                                &kp Y                     &kp U                     &kp I                       &kp O                       &kp P              &kp BSLH
&kp TAB         &ht_a LC(A) 0               &kp S              &kp D                       &kp F                        &kp G                                                &kp H                     &kp J                     &kp K                       &kp L                       &kp SEMI           &kp SQT
&kp LEFT_SHIFT  &ht_z LC(Z) 0               &ht_x LC(X) 0      &ht_c LC(C) 0               &ht_v LC(V) 0                &kp B                                                &kp N                     &kp M                     &kp COMMA                   &kp DOT                     &kp FSLH           &kp RSHFT
&tog 5          &kp GRAVE                   &kp LEFT_ALT       &ht_left LC(LS(LEFT)) 0     &ht_right LC(LS(RIGHT)) 0                                                                                   &ht_up LC(LS(UP)) 0       &ht_down LC(LS(DOWN)) 0     &kp LEFT_BRACKET            &kp RIGHT_BRACKET  &tog 1
                                                                                           &ht_del LS(DEL) 0            &ht_home LS(HOME) 0        &ht_end LS(END) 0         &ht_pgdn LC(PG_DN) 0      &ht_pgup LC(PG_UP) 0      &kp RIGHT_ALT
                                                                                           &kp BACKSPACE                &ht_enterctrl LCTRL ENTER  &ht_win LG(V) 0           &ht_win2 CAPS 0           &kp ENTER                 &kp SPACE
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans  &trans          &trans        &trans     &trans            &trans  &trans           &trans           &trans           &trans           &trans
&trans  &trans  &trans          &trans        &trans     &trans            &trans  &kp KP_NUM       &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp BACKSPACE    &trans
&trans  &trans  &kp HOME        &kp UP_ARROW  &kp END    &trans            &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_SUBTRACT  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans            &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS         &trans
&trans  &trans  &trans          &trans        &trans     &trans            &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL     &trans
&trans  &trans  &trans          &trans        &trans                               &trans           &trans           &trans           &trans           &trans
                                              &trans     &trans  &trans    &trans  &trans           &trans
                                              &trans     &trans  &trans    &trans  &trans           &kp KP_NUMBER_0
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&bt BT_CLR   &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &trans
&trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 4        &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &to 4
&to 4        &trans        &trans        &trans        &trans                                        &trans           &trans           &trans           &trans           &to 4
                                                       &trans        &trans        &trans    &trans  &trans           &trans
                                                       &trans        &trans        &trans    &trans  &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mo 6   &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                               &trans  &trans  &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        scroll_mouse_layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                               &trans  &trans  &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};


//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,
        <&zip_xy_scaler 1 7>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};

// Right hand trackball configuration - conditional based on layer
&trackball_peripheral_listener {
    layers = <0 1 2 3 4 5>;  // Default behavior for most layers
    input-processors = <&zip_temp_layer 3 500>;
};

&trackball_peripheral_listener {
    layers = <6>;  // Scroll behavior when on layer 6 only
    input-processors = 
        <&zip_xy_scaler 1 3>,
        <&zip_xy_to_scroll_mapper>,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};